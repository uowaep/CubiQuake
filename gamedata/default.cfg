// *** CUBIQUAKE SETTINGS ***

// ADMIN
seta cq_adminpass "password"	// the password players must use to access certain commands on your server (currently only for cq_resetview)

// GENERATION SETTINGS
seta cq_worldname "world1"		// directory to load world from
seta cq_worldsize 15			// world width in clusters. changing this does not affect worlds after they have been generated.
seta cq_dungeonsize "13 13 6"	// x y z in chunks
seta cq_clustersize 1			// width of cluster in chunks
seta cq_chunksize 13			// width of chunk in blocks
seta cq_blocksize 32			// width of block in quake units (can be changed after generation. make changes to pm_stepheight to match.)
seta cq_chunksperpassage 5		// number of dungeon chunks to generate before generating a passage chunk
seta cq_gen_type 2				// sets the type of world to generate (0:flat world, single texture 1:random blocks, all textures 2:chunk prefabs)
seta cq_gen_step 0				// pauses dungeon generation at each chunk for debugging purposes
seta cq_gen_linear 1			// when set, appends new chunks to the queue rather than giving attention to the newest chunks first (experimental)

// VIEW/LOAD DISTANCE SETTINGS (server dictated)
// first pass
seta cq_viewdist1 4				// number of clusters out horizontally from the player to draw on first pass
seta cq_viewheight1 1			// number of clusters out vertically to draw on first pass
// second pass
seta cq_viewdist2 1				// second pass values work the same, but are used in this case to draw more of the vertical space around the player rather than through the entire draw area
seta cq_viewheight2 1			// this creates more vertical view distance locally for the player

// SERVER PERFORMANCE SETTINGS
seta cq_chunksave_interval 0			// seconds to wait between chunks saves	(off by default until delayed saving in sp can be made more reliable)
seta cq_chunksave_numperinterval 1		// max amount of chunks to save per save interval
seta cq_maxchunksloadedperframe	24		// maximum number of chunks to load from disk to server per frame
seta cq_chunkremovaldelay 10			// amount of seconds to wait before completely unloading a chunk when not in use
seta cq_maxcubicupdates	200				// maximum number of blocks that can be networked in a single chunk entity before spawning more network entities to help relay the data. (mid 200s and up will cause an error)
seta cq_maxgibs 99						// maximum number of gibs to allow in the world, setting this too high can cause issues (a stable max hasn't been tested, this could go higher)

// CLIENT PERFORMANCE SETTINGS
seta cq_bgload_dist 1						// distance in chunks at which faces are built in the background slowly
seta cq_dmgload_dist 1						// distance in chunks at which damage faces are drawn (removes at 1 chunk past)
seta cq_maxcubicsperbuild 64				// max number of distant cubics to build faces for per build interval (cq_maxcubicsperbuild or cq_maxfacegroupsperbuild will trigger the end of a build interval) 
seta cq_maxdamagecubicsperbuild 64			// max number of damage faces to build per build interval (cq_maxfacegroupsperbuild also affects this, but this counts as an additional set rather than an addition to the count)
seta cq_maxfacegroupsperbuild 64			// max number of face groups to build per build interval (cq_maxcubicsperbuild or cq_maxfacegroupsperbuild will trigger the end of a build interval)
seta cq_framesperfacebuild 0				// number of frames to wait between each facegroup build interval (if you want to get really excessive)
seta cq_lights_static_updateinterval 1.5	// time to wait after recieving a chunk to recalculate static lighting (waiting allows other lights to arrive and to build less often)
seta cq_lights_dynamic_updateinterval 0.02	// time to wait between updating dynamic lights
seta cq_lights_models 1						// 0: use engine lighting for models. (pretty, slower) - 1: use CubiQuake lighting for models (ugly, no shading, faster)
seta cq_clientlightradius 256				// radius of client dynamic light


// OTHER CLIENT SETTINGS
seta cq_ambientlight_radiance 0.6			// the minimum percent of ambient light to add to faces that would not receive direct light from a source
seta cq_lights_radiance 0.5					// the minimum percent of static and dynamic light to add to faces that would not receive direct light from a source

// PDoD CLIENT SETTINGS
seta cq_fog_density 0.015					// PDoD: density value used to input into the fog command
seta cq_fog_roll 0.1						// PDoD: amount of fog density to add around midnight
seta cq_fog_darknessratio 0.9				// PDoD: how dark fog gets at night compared to the sky (0 is no darkening, 1 is as dark as the sky gets)
seta cq_sky_rgb 1 0.3 0						// PDoD: color value used for sky and fog
seta cq_sky_minbrightness 0					// PDoD: minimum amount to dim the sky and fog at night
seta cq_ambientlight_darknessratio 0.95		// PDoD: how dark ambient light can get compared to the sky (0 no change, 1 as dark as the sky)
seta cq_secondsperhour 60					// PDoD: for testing thing during the whole day cycle

// PDoD WEATHER
seta cq_environment 5
seta cq_weather 0
seta cq_weather_windspeed 5000


// WORLD SETTINGS
seta cq_ambientlight "1 0.8 0.5"		// rgb ambient light. 1 1 1 will light textures to their base color values. higher values are allowed.

// EDITOR SETTINGS
seta cq_showchunkoutline 0				// draws an outline around the nearest chunk. (useful for making prefabs.)


// *** FTE ENGINE SETTINGS ***

// SERVER GAME SETTINGS
pm_stepheight 28						// parkour (this should be changed if cq_blocksize is changed)

// CLIENT LIGHTING
r_shadow_realtime_dlight 1				// cq_lights_models 0 reqires this to be on
r_shadow_realtime_dlight_shadows 0		// set this to 1 to enable model shadows from dynamic lights when cq_lights_models 1 is set
r_shadow_realtime_world_shadows 0		// set this to 1 to enable model shadows from static lights when cq_lights_models 1 is set

// SKY
r_fastsky 1						// engine flag that lets r_clearcolor control sky color, and probably some other things	
r_clearcolor 0 0 0				// sky color, or void color

// FOG
r_fog_permutation 0				// lets fog work with the shaders

// CONSOLE/HUD SETTINGS
con_textsize 4					// sets the console text smaller (engine default is 8)
vid_conautoscale 2				// sets the console to autoscale at size 2 and draw with less artifacts

// CROSSHAIR
crosshair 16					// sets the crosshair to a dot
crosshaircolor 0 255 0			// sets the corsshair to bright green
crosshairsize 6					// sets the crosshair to be slightly smaller than default 8

// MISC
pr_gc_threaded 1				// uses a separate thread for tempstring garbage collection
cfg_save_aliases 0				// don't save aliases to the .cfg file
con_window 0					// sets the console to window mode
cl_nopred 1						// disables player prediction because we are colliding with entities instead of actual map bsp (not sure if this needs to be set anymore)
cl_predict_players 0			// disables prediction for other players for similar reasons as above
cl_maxfps 250					// fps cap
con_logcenterprint 0			// disables centerprints to console log
r_clear 8						// some weird colour channel bitmask stuff
v_deathtilt 0					// don't use engine view tilt on death
sv_autosave 0					// cubiquake worlds don't support quake save games
sv_nqplayerphysics 0			// entity collision is handled differently in nq, so it's disabled
r_fog_cullentities 0			// this is disabled just in case. may be fine to turn on. (this is currently set so fog doesn't hide anything from the network)


// *** KEY BINDS ***

// PLAYER
bind SPACE "+jump"
bind w "+forward"
bind s "+back"
bind a "+moveleft"
bind d "+moveright"
bind shift "+speed"				// move faster
bind t "impulse 150"			// toggle client light

// EDITING TOOLS
bind mouse1 "+attack"			// use tool
bind mouse2 "impulse 99"		// alternate tool option
bind alt "impulse 98"			// toggle tool size mode

bind x "impulse 11"				// exit edit mode

bind home "impulse 100"			// cubic tool
bind end "impulse 101"			// chunk tool
bind pgup "impulse 102"			// cluster tool

bind q "impulse 110"			// edit cubic mode
bind r "impulse 111"			// add cubic mode
bind c "impulse 112"			// copy/save preafab mode
bind v "impulse 113"			// paste/load prefab mode
bind f "impulse 114"			// info edit mode

bind mwheelup	"impulse 120"	// cubic type next
bind mwheeldown	"impulse 121"	// cubic type prev

bind . "impulse 122"			// cubic shape next
bind , "impulse 123"			// cubic shape prev

bind ] "impulse 124"			// cubic rotation Y +
bind [ "impulse 125"			// cubic rotation Y -

bind = "impulse 126"			// cubic rotation XZ +
bind - "impulse 127"			// cubic rotation XZ -

// MISC
bind f1 cq_help					// lists cubiquake commands
bind f2 cq_help2				// keybind help
bind f3 cq_help3				// editor info
bind f4 cq_help4				// generator info
bind f5 cq_start				// starts world from directory specified in cq_worldname
bind f6 noclip					// toggle noclip mode (fly & move through solids)
bind backquote toggleconsole	// open/close console
bind pause pause				// pause
bind f12 screenshot				// screenshot


// ** PDOD START **

bind e "impulse 12"				// interact
bind TAB "impulse 13"			// inventory

// qbar (belt) impulses
bind 1 "impulse 1"
bind 2 "impulse 2"
bind 3 "impulse 3"
bind 4 "impulse 4"
bind 5 "impulse 5"
bind 6 "impulse 6"
bind 7 "impulse 7"
bind 8 "impulse 8"
bind 9 "impulse 9"
bind 0 "impulse 10"

// TESTING
bind k "impulse 15"				// axe
bind l "impulse 16"				// rocket launcher
bind g "impulse 21"				// spawn ai

// ** PDoD END **


// TESTING
bind h "impulse 22"				// print nearest chunk ent info

// rmb is normally set to impulse 99		// loose block example: sets target block velocity forward with MOVETYPE_BOUNCESLIDE, no friction, and no flags set	
bind b "impulse 90"				// train example: sets target block velocity forward with MOVETYPE_BOUNCESLIDE, no friction, and flags BSFLAG_NOBOUNCE | BSFLAG_NOGRAVITY set	
bind n "impulse 91"				// platform example: sets target block velocity upward with MOVETYPE_BOUNCESLIDE, no friction, and flags BSFLAG_NOBOUNCE | BSFLAG_NOGRAVITY set	
bind m "impulse 92"				// effect example: sets random blocks in a ring around the player with velocity upward, MOVETYPE_BOUNCESLIDE, no friction, and flags BSFLAG_NOGRAVITY	