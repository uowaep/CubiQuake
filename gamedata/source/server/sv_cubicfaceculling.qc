int SwapCullBits(int cullbits, int cb_u, int cb_w, int cb_s, int cb_e, int cb_n, int cb_d)
{
	return	(((cullbits & cb_u)>0)*CULLBITS_PARTIAL_U) |
			(((cullbits & cb_w)>0)*CULLBITS_PARTIAL_W) |
			(((cullbits & cb_s)>0)*CULLBITS_PARTIAL_S) |
			(((cullbits & cb_e)>0)*CULLBITS_PARTIAL_E) |
			(((cullbits & cb_n)>0)*CULLBITS_PARTIAL_N) |
			(((cullbits & cb_d)>0)*CULLBITS_PARTIAL_D);
}

int RotateCullBits(int cullbits, int rotation)
{
	switch(rotation)
	{
		case BLOCKROTATION_E:		break;	// default
		case BLOCKROTATION_N:		cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_D);	break;
		case BLOCKROTATION_W:		cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_D);	break;
		case BLOCKROTATION_S:		cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_D);	break;
		
		case BLOCKROTATION_CW_E:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_S);	break;
		case BLOCKROTATION_CW_N:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_S);	break;
		case BLOCKROTATION_CW_W:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_S);	break;
		case BLOCKROTATION_CW_S:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_S);	break;
		
		case BLOCKROTATION_UD_E:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_U);	break;
		case BLOCKROTATION_UD_N:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_U);	break;
		case BLOCKROTATION_UD_W:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_U);	break;
		case BLOCKROTATION_UD_S:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_U);	break;

		case BLOCKROTATION_CCW_E:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_N);	break;
		case BLOCKROTATION_CCW_N:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_N);	break;
		case BLOCKROTATION_CCW_W:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_N);	break;
		case BLOCKROTATION_CCW_S:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_N);	break;

		case BLOCKROTATION_FW_E:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_E);	break;
		case BLOCKROTATION_FW_N:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_E);	break;
		case BLOCKROTATION_FW_W:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_E);	break;
		case BLOCKROTATION_FW_S:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_W, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_E);	break;

		case BLOCKROTATION_BW_E:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_W);	break;
		case BLOCKROTATION_BW_N:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_W);	break;
		case BLOCKROTATION_BW_W:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_W);	break;
		case BLOCKROTATION_BW_S:	cullbits = SwapCullBits(cullbits, CULLBITS_PARTIAL_E, CULLBITS_PARTIAL_S, CULLBITS_PARTIAL_D, CULLBITS_PARTIAL_N, CULLBITS_PARTIAL_U, CULLBITS_PARTIAL_W);	break;
	}
	
	return cullbits;
}

int	GetPartialSideCullBitsForShape(int type, int shape, int rotation)
{
	int partialsidebits = 0;
	
	if(type >= baseobjecttypeid)
		return CULLBITS_PARTIAL_ALL;
	
	if(shape == BLOCKSHAPE_CUBE)
		return 0;
	
	switch(shape)
	{
		case BLOCKSHAPE_RAMP:		partialsidebits = CULLBITS_PARTIAL_U | CULLBITS_PARTIAL_N | CULLBITS_PARTIAL_S | CULLBITS_PARTIAL_W;	break;
		case BLOCKSHAPE_WEDGETIP:	partialsidebits = CULLBITS_PARTIAL_U | CULLBITS_PARTIAL_N | CULLBITS_PARTIAL_S | CULLBITS_PARTIAL_E | CULLBITS_PARTIAL_W;	break;
		case BLOCKSHAPE_WEDGE:		partialsidebits = CULLBITS_PARTIAL_U | CULLBITS_PARTIAL_N | CULLBITS_PARTIAL_S | CULLBITS_PARTIAL_W;	break;
		case BLOCKSHAPE_SLAB:		partialsidebits = CULLBITS_PARTIAL_U | CULLBITS_PARTIAL_N | CULLBITS_PARTIAL_S | CULLBITS_PARTIAL_E | CULLBITS_PARTIAL_W;	break;
	}
	
	partialsidebits = RotateCullBits(partialsidebits, rotation);
	
	return partialsidebits;
}